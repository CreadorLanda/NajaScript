# NajaScript - Exemplo Completo
# Este exemplo demonstra as principais características da linguagem

println("=== TIPOS DE DADOS BÁSICOS ===");
int idade = 25;
float altura = 1.75;
string nome = "João";
bool ativo = true;

println("Nome: " + nome);
println("Idade: " + idade);
println("Altura: " + altura + "m");
println("Ativo: " + ativo);

println("\n=== ESTRUTURAS DE CONTROLE ===");

# If-else
if (idade > 18) {
    println("Maior de idade");
} else {
    println("Menor de idade");
}

# Operador ternário
string status = idade > 30 ? "Experiente" : "Novato";
println("Status: " + status);

# Loop while
println("\nLoop While - Contagem regressiva:");
int contador = 3;
while (contador > 0) {
    println(contador);
    contador = contador - 1;
}

# Loop for
println("\nLoop For - Tabuada do 2:");
for (int i = 1; i <= 3; i = i + 1) {
    println("2 x " + i + " = " + (2 * i));
}

# Switch-case
println("\nSwitch-case:");
int opcao = 2;
switch (opcao) {
    case 1:
        println("Opção 1 selecionada");
        break
    case 2:
        println("Opção 2 selecionada");
        break
    default:
        println("Outra opção selecionada");
}

println("\n=== FUNÇÕES ===");

# Função com retorno
fun soma(int a, int b) {
    return a + b;
}

println("Resultado da soma: " + soma(5, 3));

# Função com tipo 'any'
fun mostrarInfo(any valor) {
    println("Tipo: " + type(valor) + ", Valor: " + valor);
}

mostrarInfo(42);
mostrarInfo("texto");
mostrarInfo(true);

println("\n=== ESTRUTURAS DE DADOS ===");

# Listas
int numeros = list(1, 2, 3, 4, 5);
println("Lista: " + numeros);
numeros.add(6);
println("Lista após adicionar 6: " + numeros);
numeros.remove(0);
println("Lista após remover o índice 0: " + numeros);

# Vetores (imutáveis)
int vetor = vecto(10, 20, 30);
println("\nVetor: " + vetor);
println("Primeiro elemento do vetor: " + vetor.get(0));

# Dicionário
dict pessoa = {nome, idade, altura, ativo};
println("\nDicionário: " + pessoa);

println("\n=== FLUX E EVENTOS ONCHANGE ===");

# Variáveis para demonstrar flux
int a = 10;
int b = 5;

# Declaração de flux
flux resultado = a + b;
println("Valor inicial do flux: " + resultado);

# Função callback personalizada
fun monitorarMudancas(string nome_var, any valor_antigo, any valor_novo) {
    println("Variável '" + nome_var + "' alterada:");
    println("  De: " + valor_antigo);
    println("  Para: " + valor_novo);
}

# Registrando eventos onChange
onChange("a", monitorarMudancas);
onChange("resultado", printChange);

# Alterando valor para acionar eventos
println("\nAlterando valor de 'a':");
a = 20;
println("Valor atual do flux: " + resultado);

println("\n=== FIM DO EXEMPLO ==="); 