// Teste completo da linguagem NajaScript
// Este arquivo testa todas as funcionalidades principais

// 1. Imports e Módulos
import 'math';
import 'string' as str;

// 2. Tipos e Variáveis
int idade = 25;
float altura = 1.75;
string nome = "João";
bool ativo = true;
dict pessoa = {
    "nome": "Maria",
    "idade": 30
};
list numeros = [1, 2, 3, 4, 5];
vector cores = ["vermelho", "azul", "verde"];

// 3. Funções
fun calcularIMC(float peso, float altura) {
    return peso / (altura * altura);
}

async fun buscarDados(string url) {
    // Simulação de chamada assíncrona
    await delay(1000);
    return {"status": "ok", "data": "dados"};
}

// 4. Classes
class Pessoa {
    private string nome;
    public int idade;
    protected float altura;

    constructor(string nome, int idade, float altura) {
        this.nome = nome;
        this.idade = idade;
        this.altura = altura;
    }

    public fun getNome() {
        return this.nome;
    }
}

// 5. Interface
interface Animal {
    fun fazerSom();
    fun mover();
}

// 6. Enum
enum TipoUsuario {
    ADMIN,
    USUARIO,
    CONVIDADO
}

// 7. Estruturas de Controle
fun verificarIdade(int idade) {
    if (idade >= 18) {
        print("Maior de idade");
    } else if (idade >= 12) {
        print("Adolescente");
    } else {
        print("Criança");
    }
}

// 8. Loops
fun imprimirNumeros() {
    // For
    for (int i = 0; i < 5; i++) {
        print(i);
    }

    // While
    int contador = 0;
    while (contador < 3) {
        print(contador);
        contador++;
    }

    // Do/While
    do {
        print("Executando...");
    } while (false);

    // For In
    forin (numero in numeros) {
        print(numero);
    }
}

// 9. Switch/Case
fun verificarTipo(TipoUsuario tipo) {
    switch (tipo) {
        case ADMIN:
            print("Acesso total");
            break;
        case USUARIO:
            print("Acesso limitado");
            break;
        case CONVIDADO:
            print("Acesso básico");
            break;
        default:
            print("Tipo desconhecido");
            break;
    }
}

// 10. Try/Catch
fun dividir(int a, int b) {
    try {
        return a / b;
    } catch (error) {
        print("Erro na divisão: " + error);
        return 0;
    } finally {
        print("Operação finalizada");
    }
}

// 11. Função Principal
fun main() {
    // Teste de entrada/saída
    string nome = input("Digite seu nome: ");
    println("Olá, " + nome + "!");

    // Teste de funções
    float imc = calcularIMC(70.0, 1.75);
    print("IMC: " + imc);

    // Teste de classes
    Pessoa pessoa = new Pessoa("Ana", 25, 1.65);
    print(pessoa.getNome());

    // Teste de estruturas de controle
    verificarIdade(20);
    imprimirNumeros();
    verificarTipo(TipoUsuario.ADMIN);

    // Teste de tratamento de erros
    int resultado = dividir(10, 0);

    // Teste de funções assíncronas
    async fun testarAsync() {
        dict dados = await buscarDados("https://api.exemplo.com");
        print(dados);
    }
    testarAsync();
}

// Executar o programa
main(); 